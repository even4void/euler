#lang racket

;; Problem 2
;; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
;; By starting with 1 and 2, the first 10 terms will be:
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
;; find the sum of the even-valued terms.
;; https://projecteuler.net/problem=2

;; Fast doubling Fibonacci algorithm
(define (fib n)
  (cond [(= n 0) 0]
        [(or (= n 1) (= n 2)) 1]
        [else (let* ([k (floor (/ n 2))])
                (if (even? n)
                    (* (fib k) (- (* 2 (fib (add1 k))) (fib k)))
                    (+ (expt (fib (add1 k)) 2) (expt (fib k) 2))))]))

(define (sol-002 (n 34))
  (apply + (filter even? (map fib (range 0 n)))))

(sol-002)
